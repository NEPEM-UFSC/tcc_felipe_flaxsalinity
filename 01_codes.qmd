---
title: "01 ---"
---

```{r global_options, include = FALSE}
knitr::opts_chunk$set(cache = FALSE,
                      comment = "##",
                      collapse = TRUE,
                      warning = FALSE,
                      message = FALSE)

```


# Pacotes

```{r warning=FALSE, message=FALSE}
library(rio)
library(tidyverse)
library(germinationmetrics)
library(gganimate)
library(emmeans)
library(patchwork)
library(metan)
library(broom)
library(scales)
library(gifski)

set_wd_here()
df <- 
  import("data/dados_linaza.xlsx") |> 
  mutate(gen = paste0("G", gen))

dftempo <- 
  df |> 
  select(gen:G7) |>
  pivot_longer(G1:G7, names_to = "dai", values_to = "germ") |> 
  separate_wider_position(dai, widths = c(1, dia = 1)) |> 
  mutate(dia = as.numeric(dia))


```

# Tempo
Visão geral dos resultados

```{r}

dfplot <- 
  dftempo |> 
  group_by(gen, dose, dia) |> 
  summarise(germ = mean(germ)) |> 
  mutate(germ_perc = germ / 24)

p <- 
  ggplot(dfplot, aes(x = dia, y = germ_perc, color = gen)) +
  geom_path() +
  geom_point(size = 2.5) +
  facet_wrap(~dose, ncol = 5) +
  theme_bw(base_size = 14) +
  labs(x = "Days After Sowing",
       y = "Percentage of Germinated Seeds",
       color = "") +
  scale_x_continuous(breaks = 1:7) +
  theme(panel.grid.minor.x = element_blank()) +
  scale_y_continuous(
    limits = c(0, 1),
    labels = percent_format(accuracy = 1)
  )
  
  anim <- 
  p + 
  transition_reveal(dia) +
  ease_aes("exponential-in-out")

animate(anim, width = 12, height = 4, units = "in", res = 300)
#anim_save("figs/animation.gif")

#ggsave("figs/evolucao_tempo.jpg", width = 12, height = 4)
view(anim)
```



# Modelagem da germinação
```{r}
germanal <- function(time, germ){
  gof <- function(mod){
    modt <- mod$model
    data.frame(
      aic = AIC(modt),
      rmse = sqrt(mean(residuals(modt)^2)),
      mae = mean(abs(residuals(modt)))
    )
  }
  if(all(germ  == 0)){
    pars <- 
      data.frame(
        a = NA,
        b = NA,
        t50 = NA,
        txtot10 = NA,
        txtot70 = NA,
        txger10 = NA,
        txger70 = NA,
        tmgr = NA,
        mgt = NA,
        auc = NA,
        ivg = NA,
        timson = NA,
        meangermtime = NA,
        sync = NA,
        cugerm = NA,
        tt50 = NA
      )
    cbind(pars, data.frame(aic= NA, rmse = NA, mae = NA))
  } else{
    # modelo
    mod <- 
      FourPHFfit(
        germ,
        time,
        total.seeds = 24,
        partial = FALSE,
        fix.y0 = TRUE,
        fix.a = TRUE,
        tmax = 7,
        xp = c(10, 70),
        umin = 10,
        umax = 75,
        tries = 3
      )
    pars <- 
      data.frame(
        a = mod$a,
        b = mod$b,
        t50 = mod$t50.total,
        t50germ = mod$t50.Germinated,
        txtot10 = mod$txp.total[[1]],
        txtot70 = mod$txp.total[[2]],
        txger10 = mod$txp.Germinated[[1]],
        txger70 = mod$txp.Germinated[[2]],
        tmgr = mod$TMGR,
        mgt = mod$MGT,
        auc = mod$AUC,
        ivg = GermSpeed(germ, time),
        timson = TimsonsIndex(germ, time, total.seeds = 24, max = 7),
        meangermtime = MeanGermTime(germ, time),
        sync = GermSynchrony(germ, time),
        cugerm = CUGerm(germ, time),
        tt50 = t50(germ, time)
        
      )
    gof <- gof(mod)
    cbind(pars, gof)
  }
}


# mapear as unidades experimentais
mod_res <- 
  dftempo |> 
  group_by(gen, dose, rep) |> 
  nest() |> 
  mutate(res = map(data, function(x){
    germanal(x$dia, x$germ)
  })) |> 
  unnest(cols = res)

export(mod_res |> select(-data), "data/mod_res.xlsx")


```


# Associações
## Correlação
```{r}
dfcor <- 
  left_join(mod_res, df) |> 
  select(-c(G1:G7), -aic, -rmse, -mae) |> 
  ungroup() |>  
  mutate(across(where(is.numeric), function(x){
      x[is.infinite(x)] <- NA
      x
  })) |> 
  filter(!is.na(a))

matcor <- 
  dfcor |>  
  metan::corr_coef(a:massa_seca)

plot(matcor)


```


## Trilha
```{r}

a <- colindiag(dfcor, ivg, t50germ, a, b, tmgr, meangermtime)
a

path <- path_coeff(
  dfcor,
  resp = massa_seca, 
  pred = c( ivg, t50germ, a, b, tmgr, meangermtime)
)
plot(path)
```



# Análises
## Dados

```{r}
dfanal <- 
  left_join(mod_res, df) |> 
  mutate(total = 24,
         germperc = a / 100,
         dosef = as.factor(dose),
         rep = as.factor(rep)) |> 
  filter(dose != "200")

```


## ANOVAS
### Germinação final
```{r}
ggplot(dfanal, aes(gen, a, fill = gen)) + 
  geom_boxplot() +
  facet_wrap(~dose, ncol = 5)

# modelo generalizado
modgen <- glm(cbind(G7, total-G7) ~ gen * dosef + rep,
              family = binomial,
              data = dfanal)
anova(modgen)
modmeans_g <- emmeans(modgen, ~gen | dosef)

plot(modmeans_g, comparisons = TRUE, CIs = FALSE)

dfint_gern <- plot(modmeans_g, plotit = FALSE, type = "response" ) |> as.data.frame() %>% 
  mutate(letra = c("a", "a", "a", "b", "a","a", "a", "a", "b", "a", "a", "b", "b", "c", "b", "a", "b", "c", "ab", "c" ))



 tukey_germ <- 
  ggplot(dfint_gern, aes(dosef, the.emmean, fill = gen)) +
  geom_col(position = position_dodge(width = 0.9)) +
  geom_text(aes(label = letra),
            position = position_dodge(width = 0.9),
            vjust = -1) +
  theme_bw(base_size = 14) +
  labs(
    x = "KCl Dose (mM)",
    y = "Final Germination (%)"
  ) +
  scale_y_continuous(
    limits = c(0, 1),
    labels = percent_format(accuracy = 1)
  )
# regressão
reg_germ <- 
  dfint_gern %>% 
  mutate(dosef = as.numeric(dosef)) %>% 
  group_by(gen) %>% 
  nest() %>% 
  mutate(reg = map(data, function(x){
    lm(the.emmean ~ dosef, data =x) %>% tidy()
  })) %>% 
  unnest(cols = reg) %>% 
  select(gen:estimate) %>% 
  pivot_wider(names_from = term, values_from = estimate)

plot_reg_germ <- 
  ggplot(dfint_gern, aes(x = dosef, y = the.emmean, color = gen, group = gen)) +
  geom_smooth(method = "lm", se = FALSE) +
  geom_point() +
  theme_bw(base_size = 14) +
  labs(
    x = "KCl Dose (mM)",
    y = "Final Germination (%)"
  ) +
  scale_y_continuous(
    limits = c(0, 1),
    labels = percent_format(accuracy = 1)
  )

library(patchwork)
tukey_germ + plot_reg_germ

```


### b
```{r}
# modelo generalizado
mod_b <- aov(b ~ gen * dosef + rep, data = dfanal)
anova(mod_b)
med_b_gen <- emmeans(mod_b, ~gen|dosef)
plot(med_b_gen, comparisons = TRUE, CIs = FALSE, type = "response") 

med_b_dose <- emmeans(mod_b, ~ dosef)

plot(med_b_dose, comparisons = TRUE, CIs = FALSE, type = "response") 

# quando tem interação

df_b <- 
  med_b_gen %>% 
  as.data.frame() %>% 
  mutate(letra = c("a", "a", "a", "b", "a","a", "a", "a", "b", "a", "a", "a", "a", "b", "a", "ac", "b", "a", "c", "ac" ))

tukey_b<- 
  ggplot(df_b, aes(dosef, emmean, fill = gen)) +
  geom_col(position = position_dodge(width = 0.9)) +
  geom_text(aes(label = letra),
            position = position_dodge(width = 0.9),
            vjust = -1) +
    theme_bw(base_size = 14) +
  labs(
 x = "KCl Dose (mM)",
y = "Germination Curve Steepness Index"
  )

# regressão
reg_b <- 
  df_b %>% 
  mutate(dosef = as.numeric(dosef)) %>% 
  group_by(gen) %>% 
  nest() %>% 
  mutate(reg = map(data, function(x){
    lm(emmean ~ dosef, data =x) %>% tidy()
  })) %>% 
  unnest(cols = reg) %>% 
  select(gen:estimate) %>% 
  pivot_wider(names_from = term, values_from = estimate)

plot_reg_b<- 
  ggplot(df_b, aes(dosef, emmean, color = gen, group = gen)) +
  geom_smooth(method = "lm", se = FALSE) +
  geom_point() +
    theme_bw(base_size = 14) +
  labs(
x = "KCl Dose (mM)",
y = "Germination Curve Steepness Index"
  )

library(patchwork)
tukey_b + plot_reg_b




```





#AUC
```{r}

# modelo generalizado
mod_auc <- aov(auc ~ gen * dosef + rep, data = dfanal)
anova(mod_auc)
med_auc_gen <- emmeans(mod_auc,~gen|dosef)


plot(med_auc_gen, comparisons = TRUE, CIs = FALSE, type = "response") 

# quando tem interação

df_auc <- 
med_auc_gen %>% 
as.data.frame() %>% 
mutate(letra = c("a", "a", "a", "b", "a","ac", "ac", "a", "b", "c","a", "ab", "b", "c", "ab","a", "a", "a", "a", "a" ))

tukey_auc <- 
ggplot(df_auc, aes(dosef, emmean, fill = gen)) +
geom_col(position = position_dodge(width = 0.9)) +
geom_text(aes(label = letra),
position = position_dodge(width = 0.9),
vjust = -1) +
  theme_bw(base_size = 14) +
labs(
x = "KCl Dose (mM)",
y = "Area Under the Curve (AUC)"
)

# regressão
reg_auc <- 
df_auc %>% 
mutate(dosef = as.numeric(dosef)) %>% 
group_by(gen) %>% 
nest() %>% 
mutate(reg = map(data, function(x){
lm(emmean ~ dosef, data =x) %>% tidy()
})) %>% 
unnest(cols = reg) %>% 
select(gen:estimate) %>% 
pivot_wider(names_from = term, values_from = estimate)

plot_reg_auc <- 
ggplot(df_auc, aes(dosef, emmean, color = gen, group = gen)) +
geom_smooth(method = "lm", se = FALSE) +
geom_point() +
  theme_bw(base_size = 14) +
labs(
x = "KCl Dose (mM)",
y = "Area Under the Curve (AUC)"
)

library(patchwork)
tukey_auc + plot_reg_auc

```



#t50
```{r}
mod_t50 <- aov(t50germ ~ gen * dosef + rep, data = dfanal)
med_t50_gen <- emmeans(mod_t50, ~gen)
gen_t50 <- plot(med_t50_gen, comparisons = TRUE, CIs = FALSE, type = "response") 

med_t50_gen <- emmeans(mod_t50, ~ dosef)
dfreg_t50 <- data.frame(med_t50_gen) %>% mutate(dosef= as.numeric(dosef))
reg_t50 <- lm(emmean ~dosef, data = dfreg_t50)
summary(reg_t50)

ggplot(med_t50_gen %>% as.data.frame(), aes(dosef, emmean)) +
geom_point() +
#geom_line() +
geom_smooth(method = "lm") +
theme_bw(base_size = 14) +
labs(
x = "KCl Dose (mM)",
y = "Time to 50% Seed Germination (Days)" 
)

```




#massa verde
```{r}

mod_mv <- aov(massa_verde ~ gen * dosef + rep, data = dfanal)
anova(mod_mv)
med_mv_gen <- emmeans(mod_mv, ~gen|dosef)
plot(med_mv_gen, comparisons = TRUE, CIs = FALSE, type = "response")

# quando tem interação

df_mv <- 
med_mv_gen %>% 
as.data.frame() %>% 
mutate(letra = c( "a", "a", "a", "b", "c", "a", "a", "b", "c", "ab", "ac", "b", "ab", "c", "ab","a", "a", "a", "a", "a"))

tukey_mv <- 
ggplot(df_mv, aes(dosef, emmean, fill = gen)) +
geom_col(position = position_dodge(width = 0.9)) +
geom_text(aes(label = letra),
position = position_dodge(width = 0.9),
vjust = -1) +
theme_bw(base_size = 14) +
labs(
x = "KCl Dose (mM)",
y = "Fresh Mass (mg)"
)

# regressão
reg_mv <- 
df_mv %>% 
mutate(dosef = as.numeric(dosef)) %>% 
group_by(gen) %>% 
nest() %>% 
mutate(reg = map(data, function(x){
lm(emmean ~ dosef, data =x) %>% tidy()
})) %>% 
unnest(cols = reg) %>% 
select(gen:estimate) %>% 
pivot_wider(names_from = term, values_from = estimate)

plot_reg_mv <- 
ggplot(df_mv, aes(dosef, emmean, color = gen, group = gen)) +
geom_smooth(method = "lm", se = FALSE) +
geom_point() +
theme_bw(base_size = 14) +
  labs(
x = "KCl Dose (mM)",
y = "Fresh Mass (mg)"
)

library(patchwork)
tukey_mv + plot_reg_mv

```



#massa seca
```{r}
mod_ms <- aov(massa_seca ~ gen * dosef + rep, data = dfanal)
anova(mod_ms)
med_ms_gen <- emmeans(mod_ms, ~gen|dosef)
as.data.frame(med_ms_gen)
plot(med_ms_gen, comparisons = TRUE, CIs = FALSE, type = "response") 

# quando tem interação

df_ms <- 
med_ms_gen %>% 
as.data.frame() %>% 
mutate(letra = c( "a", "a", "a", "b", "a","ab", "a", "b", "c", "ab","a", "b", "b", "c", "d", "a", "a", "a", "a", "a" ))

tukey_ms <- 
ggplot(df_ms, aes(dosef, emmean, fill = gen)) +
geom_col(position = position_dodge(width = 0.9)) +
geom_text(aes(label = letra),
position = position_dodge(width = 0.9),
vjust = -1) +
theme_bw(base_size = 14) +
labs(
x = "KCl Dose (mM)",
y = "Dry Mass (mg)"
)

# regressão
reg_ms <- 
df_ms %>% 
mutate(dosef = as.numeric(dosef)) %>% 
group_by(gen) %>% 
nest() %>% 
mutate(reg = map(data, function(x){
lm(emmean ~ dosef, data =x) %>% tidy()
})) %>% 
unnest(cols = reg) %>% 
select(gen:estimate) %>% 
pivot_wider(names_from = term, values_from = estimate)

plot_reg_ms <- 
ggplot(df_ms, aes(dosef, emmean, color = gen, group = gen)) +
geom_smooth(method = "lm", se = FALSE) +
geom_point() +
theme_bw(base_size = 14) +
labs(
x = "KCl Dose (mM)",
y = "Dry Mass (mg)"
)

library(patchwork)
tukey_ms + plot_reg_ms

```



#comprimento
```{r}

mod_cp <- aov(comp_plant ~ gen * dosef + rep, data = dfanal)
anova(mod_cp)
med_cp_gen <- emmeans(mod_cp, ~gen)
gen_cp <- plot(med_cp_gen, comparisons = TRUE, CIs = FALSE, type = "response")

med_cp_gen <- emmeans(mod_cp, ~ dosef)
dfreg_cp <- data.frame(med_cp_gen) %>% mutate(dosef= as.numeric(dosef))
reg_cp <- lm(emmean ~dosef, data = dfreg_cp)
summary(reg_cp)

ggplot(med_cp_gen %>% as.data.frame(), aes(dosef, emmean)) +
geom_point() +
#geom_line() +
geom_smooth(method = "lm") +
theme_bw(base_size = 14) +
labs(
x = "KCl Dose (mM)",
y = "Seedling length (mm)"
)

```


